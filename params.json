{"name":"Mcx","tagline":"A tmux-based SSH/Telnet Client for Managing Many-hosts","body":"# Mcx\r\n\r\nA tmux-based SSH/Telnet Client for Managing Many-hosts\r\n\r\n---\r\n\r\n## Get Started\r\n### Prerequisites\r\n#### `tmux`\r\nSince `Mcx` is `tmux`-based, you must use your system's package manager to install the `tmux` first. For example, you can use\r\n```bash\r\napt-get install tmux\r\n```\r\nin Ubuntu, or\r\n```bash\r\nbrew install tmux\r\n```\r\nin Mac OS X.\r\n#### Python modules: \r\nThe modules `pexpect`, `toml` and `pypinyin` should be installed first via:\r\n\r\n```bash\r\npip install pexpect pypinyin toml\r\n```\r\n#### Ftp client\r\nAn application that can handle the `\"ftp://\"` urls should be installed. If you do not use ftp, this can be ignored.\r\n    \r\n### Basic Installation\r\n#### Clone this repository\r\n```bash\r\ngit clone https://github.com/Tefx/Mcx.git\r\n```\r\n#### Configuration\r\n1. Copy the sample configurations to `/etc/mcx` or `~/.mcx`:\r\n    \r\n    ```bash\r\n    cp -r Mcx/conn_sample ~/.mcx\r\n    ```\r\n2. Change the ftp url handler by setting the value of`ftp_tool` in `$CONF_PATH/config.json`.\r\n  - You can easily set it to `xdg-open` for Linux or `open` for Mac OS X.\r\n  - You can alternatively set it to `filezilla` or any other specific app, as long as it can handle the url `ftp://user:password@ip`.\r\n3. Put you host configurations inside `$CONF_PATH/hosts` folder.\r\n  - Have a Look at the sample host configurations. It should be self-explanatory.\r\n  - `conn_type` should be either `ssh` or `telnet`.\r\n  - `auth_type` should be either `password` or `key`. If the value is `password`, the variable `password` must be set. If the value is `key`, an optional variable `passphrase` might be needed at the same time.\r\n  - The sub-folders and any number of configuration files are acceptable. The `hosts` folder will be scanned recursively for all hosts.\r\n\r\n### Usages\r\n#### Launch\r\n\r\n```bash\r\ncd Mcx;tmux -f tmux.source\r\n```\r\n\r\n#### Keymap\r\nKeybinding           | Description\r\n---------------------|------------------------------------------------------------\r\n<kbd> Prefix S </kbd>| search hosts by name.\r\n<kbd> Prefix F </kbd>| open ftp application and connect to the current host.\r\n<kbd> Prefix V </kbd>| open a vertically splited pane and connect to the same host.\r\n<kbd> Prefix v </kbd>| open a horizontally splited pane and connect to the same host.\r\n<kbd> Prefix C </kbd>| view all connected hosts. I call this listing pane as `host-listing-pane`.\r\n<kbd> d </kbd>  | kill connections to the selected hosts. Works only in the `hast-listing-pane`.\r\n  - Notes:\r\n    - The <kbd>Prefix</kbd> should be <kbd>Ctrl-B</kbd> by default in `tmux`.\r\n    - Using <kbd>Prefix S</kbd> to connect a host which is already have connections in other window is considered as connecting a new host. The different windows connected to the same host are shown as several hosts in the `host-listing-pane` and can be killed individually.\r\n    - All other tmux-shortcuts should be usable as usual.\r\n    - In searching, the patterns can be full Pinyin, Pinyin Initials, Pinyin first-letters or substrings. `/` is used for splitting different levels. For example, `\"北京/new/测试MySQL/Server1\"` can be matched by:\r\n      - `bj`\r\n      - `bj/csh`\r\n      - `bj/cs/1`\r\n      - `new/Ser`\r\n      - `ceshi/1`\r\n      -  And many other patterns. Try out by yourselves.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}